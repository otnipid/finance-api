#!/bin/bash

# Exit on any error
set -e

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${GREEN}Running pre-push checks...${NC}"

# Change to the root directory of the repository
cd "$(git rev-parse --show-toplevel)"

# Check if we're in a virtual environment
if [ -z "$VIRTUAL_ENV" ] && [ -z "$CONDA_PREFIX" ]; then
    echo -e "${RED}Error: Not in a virtual environment. Please activate your virtual environment first.${NC}"
    exit 1
fi

# Check if pytest is installed
if ! command -v pytest &> /dev/null; then
    echo -e "${RED}Error: pytest is not installed. Please install it with 'pip install pytest'${NC}"
    exit 1
fi

# Function to run tests with a given marker
run_tests() {
    local marker=$1
    local name=$2
    
    echo -e "\n${BLUE}Running ${name} tests...${NC}"
    if ! TESTING=true python -m pytest -v -m "${marker}" --cov=src --cov-append --cov-report=term-missing; then
        echo -e "${RED}❌ ${name} tests failed. Please fix the issues before pushing.${NC}"
        return 1
    fi
    return 0
}

# Run unit tests
run_tests "unit" "Unit" || exit 1

# Run integration tests
run_tests "integration" "Integration" || exit 1

# Generate final coverage report
echo -e "\n${GREEN}Generating coverage report...${NC}"
python -m pytest --cov=src --cov-report=term-missing --cov-report=html:htmlcov

echo -e "\n${GREEN}✅ All tests passed! Pushing to remote...${NC}"
exit 0